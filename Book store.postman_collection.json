{
	"info": {
		"_postman_id": "2d297392-ee73-422b-9fa5-c912fdec8d6c",
		"name": "Book store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25253703",
		"_collection_link": "https://www.postman.com/docking-module-cosmologist-10894912/workspace/my-workspace/collection/25253703-2d297392-ee73-422b-9fa5-c912fdec8d6c?action=share&source=collection_link&creator=25253703"
	},
	"item": [
		{
			"name": "Activities",
			"item": [
				{
					"name": "Get all activities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check retrieving the activities successfully \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check te response body has false completed\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"completed\");\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Activities",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get activity by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check the response bady has activity 15\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Activity 15\");\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Activities/15",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Activities",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "update activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check the updated data successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 7,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-10-24T14:37:15.518Z\",\r\n  \"completed\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Activities/7",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Activities",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "create activities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body response includes  string title \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 31,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-10-24T14:42:32.193Z\",\r\n  \"completed\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Activities",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete activity by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/Activities/5",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Activities",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deleted activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Activities/5",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Activities",
								"5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authors",
			"item": [
				{
					"name": "Get all authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Authors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"te response body include string firstname\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Authors",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Author by book id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Authors/authors/books/200",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"200"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get author by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Authors/19",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Authors",
								"19"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/Authors/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Authors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deleted author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Authors/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Authors",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Get all books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"the response body includes Book 152 title\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Book 152\");\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Books",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check the response body includes wonderland title \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"wonderland\");\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 201,\r\n  \"title\": \"woderland\",\r\n  \"description\": \"this book tells the story of Alice in wonderland\",\r\n  \"pageCount\": 30,\r\n  \"excerpt\": \"string\",\r\n  \"publishDate\": \"2023-10-25T08:44:02.781Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Books",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get book by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Books/20",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Books",
								"20"
							]
						}
					},
					"response": []
				},
				{
					"name": "update book",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 4,\r\n  \"title\": \"the worldwide\",\r\n  \"description\": \"string\",\r\n  \"pageCount\":20,\r\n  \"excerpt\": \"string\",\r\n  \"publishDate\": \"2023-10-25T08:55:43.310Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Books/5",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete book",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/Books/30",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Books",
								"30"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cover Photos",
			"item": [
				{
					"name": "Get all cover photos",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/CoverPhotos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new cover photo",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 300,\r\n  \"idBook\": 300,\r\n  \"url\": \"https://webst.depositphotos.com/_css/vue/src_vue_components_modals_FileZoomModal_vue.css?3ae92d04c09ddbdd41d0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/CoverPhotos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cover photos by id",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/CoverPhotos/books/covers/30",
							"host": [
								"{{URL}}"
							],
							"path": [
								"CoverPhotos",
								"books",
								"covers",
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cover photos by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/CoverPhotos/50",
							"host": [
								"{{URL}}"
							],
							"path": [
								"CoverPhotos",
								"50"
							]
						}
					},
					"response": []
				},
				{
					"name": "update cover photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check the response body includes string url \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string\");\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 301,\r\n  \"idBook\": 301,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/CoverPhotos/11",
							"host": [
								"{{URL}}"
							],
							"path": [
								"CoverPhotos",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cover photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check the cover photo delete successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/CoverPhotos/44",
							"host": [
								"{{URL}}"
							],
							"path": [
								"CoverPhotos",
								"44"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check the users are exists\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check te response body includes password3 \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Password3\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check the user is created\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"check the response body includes Heba\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Heba\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 11,\r\n  \"userName\": \"Heba\",\r\n  \"password\": \"Heba11\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches strincheck the reponse body includes user 6\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User 6\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/Users/6",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Users",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check the user is updated successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\":23,\r\n  \"userName\": \"Ahmed\",\r\n  \"password\": \"Ahmed23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/Users/3",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Users",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"the user is deleted successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/Users/7",
							"host": [
								"{{URL}}"
							],
							"path": [
								"Users",
								"7"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "https://fakerestapi.azurewebsites.net/api/v1",
			"type": "string"
		}
	]
}